{
	"info": {
		"_postman_id": "1b236f63-28b1-402a-958d-8167c9509288",
		"name": "OTUS. API Gateway",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. create user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.globals.set(\"user1_id\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"user 1 first name\", \n    \"last_name\": \"user 1 last name\", \n    \"login\": \"user1\", \n    \"password\": \"user1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. get user1 (unauthorized)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/{{user1_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. update user1 (unauthorized)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"user1_new_first_name\", \"user 1 first name \" + Math.random());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"{{user1_new_first_name}}\",\n    \"last_name\": \"user 1 last name updated\",\n    \"login\": \"user1\",\n    \"password\": \"eb22267f81be4ac7332a491e7871b00a881262901cb4a0e4644550241e8243f5\",\n    \"salt\": \"cegta6m2zc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/{{user1_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. login user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"token\", pm.response.headers.get(\"X-Auth-Token\"));",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. get user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/{{user1_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "6. update user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"user1_new_first_name\", \"user 1 first name \" + Math.random());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"{{user1_new_first_name}}\",\n    \"last_name\": \"user 1 last name updated\",\n    \"login\": \"user1\",\n    \"password\": \"eb22267f81be4ac7332a491e7871b00a881262901cb4a0e4644550241e8243f5\",\n    \"salt\": \"cegta6m2zc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/{{user1_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "7. get user1 (check update)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"First name is updated\", function () {",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.first_name).to.eql(pm.globals.get(\"user1_new_first_name\"));",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/{{user1_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "8. create user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.globals.set(\"user2_id\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"host": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Host",
						"type": "text",
						"value": "arch.homework"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"user 2 first name\", \n    \"last_name\": \"user 2 last name\", \n    \"login\": \"user2\", \n    \"password\": \"user2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "9. login user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.globals.set(\"token\", pm.response.headers.get(\"X-Auth-Token\"));",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\": \"user2\",\n    \"password\": \"user2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "10. get user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/{{user2_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user2_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "11. get user1 (forbidden)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/{{user1_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user1_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "",
			"disabled": true
		}
	]
}